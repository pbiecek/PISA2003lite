sum)
tsells <- data.frame(x = as.numeric(names(tsells)), y=tsells)
tsells$col = "black"
tsells[tsells$x > min_from_game & tsells$x < min_from_game +10, "col"] = "red"
print(
ggplot(tsells, aes(x=x, y=y,  ymin = 0, ymax=y, colour=col), size=I(3), xlab="minute", ylab="") + geom_linerange(lwd=2) + theme_bw()+theme(legend.position = "none")  + labs(title='NON ALCOHILIC', x='', y=' ', size=5) + scale_colour_brewer(palette="Set2")
, vp = viewport(layout.pos.row = 3, layout.pos.col = 1))
dev.off()
}
dev.off()
for (min_from_game in 220:-65) {
id = substr(as.character((min_from_game + 65 + 0.1)/1000),3,5)
png(paste("/Users/pbiecek/camtasia/Dropbox/Mr.October/movie_game279/plot",id,".png",sep=""),1800,1500)
grid.newpage()
pushViewport(viewport(layout = grid.layout(2, 2, heights = unit(c(2, 2), "null"))))
#Beer
selected <- tmpres$min_from_game_start > min_from_game & tmpres$min_from_game_start > min_from_game -20 &
tmpres$description %in% c("Alcoholic Beverage", "Beer")
aggreg <- tapply(tmpres$sum[selected], tmpres$sector[selected], sum, na.rm=T)[-1]
aggr_per_sector <- merge(data.frame(aggreg, sector = names(aggreg)), unique(posit[,c("sector","relx","rely")]))
aggr_per_sector2 <- na.omit(aggr_per_sector)
aggr_per_sector2$kol = substr(aggr_per_sector2$sector,1,1)
aggr_per_sector2 <- rbind(aggr_per_sector2, data.frame(sector="000", aggreg=0, aggr_per_sector2[1,3:4], kol=paste(0:4)))
aggr_per_sector2$kol <- factor(aggr_per_sector2$kol, levels=4:0)
aggr_per_sector3 <- aggr_per_sector2[rep(1:nrow(aggr_per_sector2), ceiling(aggr_per_sector2$aggreg/1000)),]
aggr_per_sector3$relx <- aggr_per_sector3$relx #+ rnorm(length(aggr_per_sector3$relx))/10000
aggr_per_sector3$rely <- aggr_per_sector3$rely #+ rnorm(length(aggr_per_sector3$rely))/20000
print(
ggmap(portland,darken = c(0.8, "white")) +
geom_point(aes(y = rely, x = relx, size=aggreg, col=kol), data=aggr_per_sector2)+scale_area(range = c(1, 25))+
theme(legend.position = "none") + labs(title=paste("BEER, minute: ",min_from_game, sep=""), x='', y=' ', size=5)+opts(plot.title=theme_text(size=40)) + scale_colour_brewer(palette="Set2")
, vp = viewport(layout.pos.row = 2, layout.pos.col = 1))
# Food
selected <- tmpres$min_from_game_start > min_from_game & tmpres$min_from_game_start > min_from_game -20 &
tmpres$description %in% c("Food", "Misc")
aggreg <- tapply(tmpres$sum[selected], tmpres$sector[selected], sum, na.rm=T)[-1]
aggr_per_sector <- merge(data.frame(aggreg, sector = names(aggreg)), unique(posit[,c("sector","relx","rely")]))
aggr_per_sector2 <- na.omit(aggr_per_sector)
aggr_per_sector2$kol = substr(aggr_per_sector2$sector,1,1)
aggr_per_sector2 <- rbind(aggr_per_sector2, data.frame(sector="000", aggreg=0, aggr_per_sector2[1,3:4], kol=paste(0:4)))
aggr_per_sector2$kol <- factor(aggr_per_sector2$kol, levels=4:0)
aggr_per_sector3 <- aggr_per_sector2[rep(1:nrow(aggr_per_sector2), ceiling(aggr_per_sector2$aggreg/1000)),]
aggr_per_sector3$relx <- aggr_per_sector3$relx #+ rnorm(length(aggr_per_sector3$relx))/10000
aggr_per_sector3$rely <- aggr_per_sector3$rely #+ rnorm(length(aggr_per_sector3$rely))/20000
print(
ggmap(portland,darken = c(0.8, "white")) +
geom_point(aes(y = rely, x = relx, size=aggreg, col=kol), data=aggr_per_sector2)+scale_area(range = c(1, 25))+
theme(legend.position = "none") + labs(title=paste("FOOD, minute: ",min_from_game, sep=""), x='', y=' ', size=5)+opts(plot.title=theme_text(size=40))  + scale_colour_brewer(palette="Set2")
, vp = viewport(layout.pos.row = 2, layout.pos.col = 2))
# Non beer
selected <- tmpres$min_from_game_start > min_from_game & tmpres$min_from_game_start > min_from_game -10 &
tmpres$description %in% c("Non Alcoholic Bevarage", "Non-Alcoholic")
aggreg <- tapply(tmpres$sum[selected], tmpres$sector[selected], sum, na.rm=T)[-1]
aggr_per_sector <- merge(data.frame(aggreg, sector = names(aggreg)), unique(posit[,c("sector","relx","rely")]))
aggr_per_sector2 <- na.omit(aggr_per_sector)
aggr_per_sector2$kol = substr(aggr_per_sector2$sector,1,1)
aggr_per_sector2 <- rbind(aggr_per_sector2, data.frame(sector="000", aggreg=0, aggr_per_sector2[1,3:4], kol=paste(0:4)))
aggr_per_sector2$kol <- factor(aggr_per_sector2$kol, levels=4:0)
aggr_per_sector3 <- aggr_per_sector2[rep(1:nrow(aggr_per_sector2), ceiling(aggr_per_sector2$aggreg/1000)),]
aggr_per_sector3$relx <- aggr_per_sector3$relx #+ rnorm(length(aggr_per_sector3$relx))/10000
aggr_per_sector3$rely <- aggr_per_sector3$rely #+ rnorm(length(aggr_per_sector3$rely))/20000
print(
ggmap(portland,darken = c(0.8, "white")) +
geom_point(aes(y = rely, x = relx, size=aggreg, col=kol), data=aggr_per_sector2)+scale_area(range = c(1, 25))+
theme(legend.position = "none") + labs(title=paste("NON ALCOHOLIC, minute: ",min_from_game, sep=""), x='', y=' ', size=5)+opts(plot.title=theme_text(size=40))  + scale_colour_brewer(palette="Set2")
, vp = viewport(layout.pos.row = 1, layout.pos.col = 2))
tsells <- tapply(tmpres$sum[tmpres$description %in% c("Alcoholic Beverage", "Beer")],
tmpres$min_from_game_start[tmpres$description %in% c("Alcoholic Beverage", "Beer")], sum)
tsells <- data.frame(x = as.numeric(names(tsells)), y=tsells)
tsells$col = "black"
tsells[tsells$x > min_from_game & tsells$x < min_from_game +10, "col"] = "red"
pushViewport(viewport(layout = grid.layout(7, 2, heights = unit(c(2, 2), "null"))))
print(
ggplot(tsells, aes(x=x, y=y,  ymin = 0, ymax=y, colour=col), size=I(3)) + geom_linerange(lwd=2) + theme_bw()+theme(legend.position = "none") + labs(title='BEER', x='', y=' ', size=5) + scale_colour_brewer(palette="Set2")
, vp = viewport(layout.pos.row = 1, layout.pos.col = 1))
tsells <- tapply(tmpres$sum[tmpres$description %in% c("Food", "Misc")],
tmpres$min_from_game_start[tmpres$description %in% c("Food", "Misc")], sum)
tsells <- data.frame(x = as.numeric(names(tsells)), y=tsells)
tsells$col = "black"
tsells[tsells$x > min_from_game & tsells$x < min_from_game +10, "col"] = "red"
print(
ggplot(tsells, aes(x=x, y=y,  ymin = 0, ymax=y, colour=col), size=I(3)) + geom_linerange(lwd=2) + theme_bw()+theme(legend.position = "none")  + labs(title='FOOD', x='', y=' ', size=5) + scale_colour_brewer(palette="Set2")
, vp = viewport(layout.pos.row = 2, layout.pos.col = 1))
tsells <- tapply(tmpres$sum[tmpres$description %in% c("Non Alcoholic Bevarage", "Non-Alcoholic")],
tmpres$min_from_game_start[tmpres$description %in% c("Non Alcoholic Bevarage", "Non-Alcoholic")],
sum)
tsells <- data.frame(x = as.numeric(names(tsells)), y=tsells)
tsells$col = "black"
tsells[tsells$x > min_from_game & tsells$x < min_from_game +10, "col"] = "red"
print(
ggplot(tsells, aes(x=x, y=y,  ymin = 0, ymax=y, colour=col), size=I(3), xlab="minute", ylab="") + geom_linerange(lwd=2) + theme_bw()+theme(legend.position = "none")  + labs(title='NON ALCOHILIC', x='', y=' ', size=5) + scale_colour_brewer(palette="Set2")
, vp = viewport(layout.pos.row = 3, layout.pos.col = 1))
dev.off()
}
summary(res)
271/40
# day game
res1 <- dbGetQuery(con, "SELECT game.gameid, gamedt, gamet.type, sale.locationid, grp.description, DATEDIFF(minute, game.start_dttm, sale.saledate) as min_from_game_start, COUNT(*), sum(item.totalprice)
FROM
(SELECT DISTINCT CAST(start_dttm AS date) as gamedt, start_dttm, gameid FROM yankee_game) game
JOIN (SELECT CAST(saledate AS date) AS saledt, * FROM tblsale) sale ON game.gamedt = sale.saledt
JOIN team2.game_types gamet ON gamet.gameid = game.gameid
JOIN tblsaleitem item ON sale.id = item.saleid
JOIN tblstock stock ON stock.id = item.stockid
JOIN tblcategory category ON category.id = stock.categoryid
JOIN tblgroup grp ON grp.id = category.groupid
where game.gameid = 347
and DATEDIFF(hour, game.start_dttm, sale.saledate) > -2 and DATEDIFF(hour, game.start_dttm, sale.saledate) < 4
GROUP BY 1, 2, 3, 4, 5, 6
order by min_from_game_start;")
# weekend game
res2 <- dbGetQuery(con, "SELECT game.gameid, gamedt, gamet.type, sale.locationid, grp.description, DATEDIFF(minute, game.start_dttm, sale.saledate) as min_from_game_start, COUNT(*), sum(item.totalprice)
FROM
(SELECT DISTINCT CAST(start_dttm AS date) as gamedt, start_dttm, gameid FROM yankee_game) game
JOIN (SELECT CAST(saledate AS date) AS saledt, * FROM tblsale) sale ON game.gamedt = sale.saledt
JOIN team2.game_types gamet ON gamet.gameid = game.gameid
JOIN tblsaleitem item ON sale.id = item.saleid
JOIN tblstock stock ON stock.id = item.stockid
JOIN tblcategory category ON category.id = stock.categoryid
JOIN tblgroup grp ON grp.id = category.groupid
where game.gameid = 345
and DATEDIFF(hour, game.start_dttm, sale.saledate) > -2 and DATEDIFF(hour, game.start_dttm, sale.saledate) < 4
GROUP BY 1, 2, 3, 4, 5, 6
order by min_from_game_start;")
# night game
res3 <- dbGetQuery(con, "SELECT game.gameid, gamedt, gamet.type, sale.locationid, grp.description, DATEDIFF(minute, game.start_dttm, sale.saledate) as min_from_game_start, COUNT(*), sum(item.totalprice)
FROM
(SELECT DISTINCT CAST(start_dttm AS date) as gamedt, start_dttm, gameid FROM yankee_game) game
JOIN (SELECT CAST(saledate AS date) AS saledt, * FROM tblsale) sale ON game.gamedt = sale.saledt
JOIN team2.game_types gamet ON gamet.gameid = game.gameid
JOIN tblsaleitem item ON sale.id = item.saleid
JOIN tblstock stock ON stock.id = item.stockid
JOIN tblcategory category ON category.id = stock.categoryid
JOIN tblgroup grp ON grp.id = category.groupid
where game.gameid = 333
and DATEDIFF(hour, game.start_dttm, sale.saledate) > -2 and DATEDIFF(hour, game.start_dttm, sale.saledate) < 4
GROUP BY 1, 2, 3, 4, 5, 6
order by min_from_game_start;")
con <- dbConnect(drv, host="taac1.crrfz7zi7izw.us-east-1.redshift.amazonaws.com",
port=5439,dbname="yankees",
user="team2", password="Loft\"Om4")
# day game
res1 <- dbGetQuery(con, "SELECT game.gameid, gamedt, gamet.type, sale.locationid, grp.description, DATEDIFF(minute, game.start_dttm, sale.saledate) as min_from_game_start, COUNT(*), sum(item.totalprice)
FROM
(SELECT DISTINCT CAST(start_dttm AS date) as gamedt, start_dttm, gameid FROM yankee_game) game
JOIN (SELECT CAST(saledate AS date) AS saledt, * FROM tblsale) sale ON game.gamedt = sale.saledt
JOIN team2.game_types gamet ON gamet.gameid = game.gameid
JOIN tblsaleitem item ON sale.id = item.saleid
JOIN tblstock stock ON stock.id = item.stockid
JOIN tblcategory category ON category.id = stock.categoryid
JOIN tblgroup grp ON grp.id = category.groupid
where game.gameid = 347
and DATEDIFF(hour, game.start_dttm, sale.saledate) > -2 and DATEDIFF(hour, game.start_dttm, sale.saledate) < 4
GROUP BY 1, 2, 3, 4, 5, 6
order by min_from_game_start;")
# weekend game
res2 <- dbGetQuery(con, "SELECT game.gameid, gamedt, gamet.type, sale.locationid, grp.description, DATEDIFF(minute, game.start_dttm, sale.saledate) as min_from_game_start, COUNT(*), sum(item.totalprice)
FROM
(SELECT DISTINCT CAST(start_dttm AS date) as gamedt, start_dttm, gameid FROM yankee_game) game
JOIN (SELECT CAST(saledate AS date) AS saledt, * FROM tblsale) sale ON game.gamedt = sale.saledt
JOIN team2.game_types gamet ON gamet.gameid = game.gameid
JOIN tblsaleitem item ON sale.id = item.saleid
JOIN tblstock stock ON stock.id = item.stockid
JOIN tblcategory category ON category.id = stock.categoryid
JOIN tblgroup grp ON grp.id = category.groupid
where game.gameid = 345
and DATEDIFF(hour, game.start_dttm, sale.saledate) > -2 and DATEDIFF(hour, game.start_dttm, sale.saledate) < 4
GROUP BY 1, 2, 3, 4, 5, 6
order by min_from_game_start;")
# night game
res3 <- dbGetQuery(con, "SELECT game.gameid, gamedt, gamet.type, sale.locationid, grp.description, DATEDIFF(minute, game.start_dttm, sale.saledate) as min_from_game_start, COUNT(*), sum(item.totalprice)
FROM
(SELECT DISTINCT CAST(start_dttm AS date) as gamedt, start_dttm, gameid FROM yankee_game) game
JOIN (SELECT CAST(saledate AS date) AS saledt, * FROM tblsale) sale ON game.gamedt = sale.saledt
JOIN team2.game_types gamet ON gamet.gameid = game.gameid
JOIN tblsaleitem item ON sale.id = item.saleid
JOIN tblstock stock ON stock.id = item.stockid
JOIN tblcategory category ON category.id = stock.categoryid
JOIN tblgroup grp ON grp.id = category.groupid
where game.gameid = 333
and DATEDIFF(hour, game.start_dttm, sale.saledate) > -2 and DATEDIFF(hour, game.start_dttm, sale.saledate) < 4
GROUP BY 1, 2, 3, 4, 5, 6
order by min_from_game_start;")
dbGetQuery(con, "SET search_path TO import")
# day game
res1 <- dbGetQuery(con, "SELECT game.gameid, gamedt, gamet.type, sale.locationid, grp.description, DATEDIFF(minute, game.start_dttm, sale.saledate) as min_from_game_start, COUNT(*), sum(item.totalprice)
FROM
(SELECT DISTINCT CAST(start_dttm AS date) as gamedt, start_dttm, gameid FROM yankee_game) game
JOIN (SELECT CAST(saledate AS date) AS saledt, * FROM tblsale) sale ON game.gamedt = sale.saledt
JOIN team2.game_types gamet ON gamet.gameid = game.gameid
JOIN tblsaleitem item ON sale.id = item.saleid
JOIN tblstock stock ON stock.id = item.stockid
JOIN tblcategory category ON category.id = stock.categoryid
JOIN tblgroup grp ON grp.id = category.groupid
where game.gameid = 347
and DATEDIFF(hour, game.start_dttm, sale.saledate) > -2 and DATEDIFF(hour, game.start_dttm, sale.saledate) < 4
GROUP BY 1, 2, 3, 4, 5, 6
order by min_from_game_start;")
# weekend game
res2 <- dbGetQuery(con, "SELECT game.gameid, gamedt, gamet.type, sale.locationid, grp.description, DATEDIFF(minute, game.start_dttm, sale.saledate) as min_from_game_start, COUNT(*), sum(item.totalprice)
FROM
(SELECT DISTINCT CAST(start_dttm AS date) as gamedt, start_dttm, gameid FROM yankee_game) game
JOIN (SELECT CAST(saledate AS date) AS saledt, * FROM tblsale) sale ON game.gamedt = sale.saledt
JOIN team2.game_types gamet ON gamet.gameid = game.gameid
JOIN tblsaleitem item ON sale.id = item.saleid
JOIN tblstock stock ON stock.id = item.stockid
JOIN tblcategory category ON category.id = stock.categoryid
JOIN tblgroup grp ON grp.id = category.groupid
where game.gameid = 345
and DATEDIFF(hour, game.start_dttm, sale.saledate) > -2 and DATEDIFF(hour, game.start_dttm, sale.saledate) < 4
GROUP BY 1, 2, 3, 4, 5, 6
order by min_from_game_start;")
# night game
res3 <- dbGetQuery(con, "SELECT game.gameid, gamedt, gamet.type, sale.locationid, grp.description, DATEDIFF(minute, game.start_dttm, sale.saledate) as min_from_game_start, COUNT(*), sum(item.totalprice)
FROM
(SELECT DISTINCT CAST(start_dttm AS date) as gamedt, start_dttm, gameid FROM yankee_game) game
JOIN (SELECT CAST(saledate AS date) AS saledt, * FROM tblsale) sale ON game.gamedt = sale.saledt
JOIN team2.game_types gamet ON gamet.gameid = game.gameid
JOIN tblsaleitem item ON sale.id = item.saleid
JOIN tblstock stock ON stock.id = item.stockid
JOIN tblcategory category ON category.id = stock.categoryid
JOIN tblgroup grp ON grp.id = category.groupid
where game.gameid = 333
and DATEDIFF(hour, game.start_dttm, sale.saledate) > -2 and DATEDIFF(hour, game.start_dttm, sale.saledate) < 4
GROUP BY 1, 2, 3, 4, 5, 6
order by min_from_game_start;")
res1$gamedt <- as.character(res1$gamedt)
tmpres1 <- merge(res1, posit, by.x="locationid", by.y="id")
res2$gamedt <- as.character(res2$gamedt)
tmpres2 <- merge(res2, posit, by.x="locationid", by.y="id")
res3$gamedt <- as.character(res3$gamedt)
tmpres3 <- merge(res3, posit, by.x="locationid", by.y="id")
head(tmpres3)
id = substr(as.character((min_from_game + 60 + 0.1)/1000),3,5)
png(paste("/Users/pbiecek/camtasia/Dropbox/Mr.October/movie_typesOfGame/plot",id,".png",sep=""),1800,1500)
grid.newpage()
pushViewport(viewport(layout = grid.layout(2, 2, heights = unit(c(2, 2), "null"))))
#Beer
selected <- tmpres1$min_from_game_start > min_from_game & tmpres1$min_from_game_start > min_from_game -20
aggreg <- tapply(tmpres1$sum[selected], tmpres1$sector[selected], sum, na.rm=T)[-1]
aggr_per_sector <- merge(data.frame(aggreg, sector = names(aggreg)), unique(posit[,c("sector","relx","rely")]))
aggr_per_sector2 <- na.omit(aggr_per_sector)
aggr_per_sector2$kol = substr(aggr_per_sector2$sector,1,1)
aggr_per_sector2 <- rbind(aggr_per_sector2, data.frame(sector="000", aggreg=0, aggr_per_sector2[1,3:4], kol=paste(0:4)))
aggr_per_sector2$kol <- factor(aggr_per_sector2$kol, levels=4:0)
aggr_per_sector3 <- aggr_per_sector2[rep(1:nrow(aggr_per_sector2), ceiling(aggr_per_sector2$aggreg/1000)),]
aggr_per_sector3$relx <- aggr_per_sector3$relx #+ rnorm(length(aggr_per_sector3$relx))/10000
aggr_per_sector3$rely <- aggr_per_sector3$rely #+ rnorm(length(aggr_per_sector3$rely))/20000
print(
ggmap(portland,darken = c(0.8, "white")) +
geom_point(aes(y = rely, x = relx, size=aggreg, col=kol), data=aggr_per_sector2)+scale_area(range = c(1, 25))+
theme(legend.position = "none") + labs(title=paste("Day game, minute: ",min_from_game, sep=""), x='', y=' ', size=5)+opts(plot.title=theme_text(size=40)) + scale_colour_brewer(palette="Set2")
, vp = viewport(layout.pos.row = 2, layout.pos.col = 1))
# Food
selected <- tmpres2$min_from_game_start > min_from_game & tmpres2$min_from_game_start > min_from_game -20
aggreg <- tapply(tmpres2$sum[selected], tmpres2$sector[selected], sum, na.rm=T)[-1]
aggr_per_sector <- merge(data.frame(aggreg, sector = names(aggreg)), unique(posit[,c("sector","relx","rely")]))
aggr_per_sector2 <- na.omit(aggr_per_sector)
aggr_per_sector2$kol = substr(aggr_per_sector2$sector,1,1)
aggr_per_sector2 <- rbind(aggr_per_sector2, data.frame(sector="000", aggreg=0, aggr_per_sector2[1,3:4], kol=paste(0:4)))
aggr_per_sector2$kol <- factor(aggr_per_sector2$kol, levels=4:0)
aggr_per_sector3 <- aggr_per_sector2[rep(1:nrow(aggr_per_sector2), ceiling(aggr_per_sector2$aggreg/1000)),]
aggr_per_sector3$relx <- aggr_per_sector3$relx #+ rnorm(length(aggr_per_sector3$relx))/10000
aggr_per_sector3$rely <- aggr_per_sector3$rely #+ rnorm(length(aggr_per_sector3$rely))/20000
print(
ggmap(portland,darken = c(0.8, "white")) +
geom_point(aes(y = rely, x = relx, size=aggreg, col=kol), data=aggr_per_sector2)+scale_area(range = c(1, 25))+
theme(legend.position = "none") + labs(title=paste("Weekend game, minute: ",min_from_game, sep=""), x='', y=' ', size=5)+opts(plot.title=theme_text(size=40))  + scale_colour_brewer(palette="Set2")
, vp = viewport(layout.pos.row = 2, layout.pos.col = 2))
# Non beer
selected <- tmpres3$min_from_game_start > min_from_game & tmpres3$min_from_game_start > min_from_game -10
aggreg <- tapply(tmpres3$sum[selected], tmpres3$sector[selected], sum, na.rm=T)[-1]
aggr_per_sector <- merge(data.frame(aggreg, sector = names(aggreg)), unique(posit[,c("sector","relx","rely")]))
aggr_per_sector2 <- na.omit(aggr_per_sector)
aggr_per_sector2$kol = substr(aggr_per_sector2$sector,1,1)
aggr_per_sector2 <- rbind(aggr_per_sector2, data.frame(sector="000", aggreg=0, aggr_per_sector2[1,3:4], kol=paste(0:4)))
aggr_per_sector2$kol <- factor(aggr_per_sector2$kol, levels=4:0)
aggr_per_sector3 <- aggr_per_sector2[rep(1:nrow(aggr_per_sector2), ceiling(aggr_per_sector2$aggreg/1000)),]
aggr_per_sector3$relx <- aggr_per_sector3$relx #+ rnorm(length(aggr_per_sector3$relx))/10000
aggr_per_sector3$rely <- aggr_per_sector3$rely #+ rnorm(length(aggr_per_sector3$rely))/20000
print(
ggmap(portland,darken = c(0.8, "white")) +
geom_point(aes(y = rely, x = relx, size=aggreg, col=kol), data=aggr_per_sector2)+scale_area(range = c(1, 25))+
theme(legend.position = "none") + labs(title=paste("Night game, minute: ",min_from_game, sep=""), x='', y=' ', size=5)+opts(plot.title=theme_text(size=40))  + scale_colour_brewer(palette="Set2")
, vp = viewport(layout.pos.row = 1, layout.pos.col = 2))
tsells <- tapply(tmpres1$sum,  tmpres1$min_from_game_start, sum)
tsells <- data.frame(x = as.numeric(names(tsells)), y=tsells)
tsells$col = "black"
tsells[tsells$x > min_from_game & tsells$x < min_from_game +10, "col"] = "red"
pushViewport(viewport(layout = grid.layout(7, 2, heights = unit(c(2, 2), "null"))))
print(
ggplot(tsells, aes(x=x, y=y,  ymin = 0, ymax=y, colour=col), size=I(3)) + geom_linerange(lwd=2) + theme_bw()+theme(legend.position = "none") + labs(title='Day game', x='', y=' ', size=5) + scale_colour_brewer(palette="Set2")
, vp = viewport(layout.pos.row = 1, layout.pos.col = 1))
tsells <- tapply(tmpres2$sum,
tmpres2$min_from_game_start, sum)
tsells <- data.frame(x = as.numeric(names(tsells)), y=tsells)
tsells$col = "black"
tsells[tsells$x > min_from_game & tsells$x < min_from_game +10, "col"] = "red"
print(
ggplot(tsells, aes(x=x, y=y,  ymin = 0, ymax=y, colour=col), size=I(3)) + geom_linerange(lwd=2) + theme_bw()+theme(legend.position = "none")  + labs(title='Weekend game', x='', y=' ', size=5) + scale_colour_brewer(palette="Set2")
, vp = viewport(layout.pos.row = 2, layout.pos.col = 1))
tsells <- tapply(tmpres3$sum,
tmpres3$min_from_game_start,
sum)
tsells <- data.frame(x = as.numeric(names(tsells)), y=tsells)
tsells$col = "black"
tsells[tsells$x > min_from_game & tsells$x < min_from_game +10, "col"] = "red"
print(
ggplot(tsells, aes(x=x, y=y,  ymin = 0, ymax=y, colour=col), size=I(3), xlab="minute", ylab="") + geom_linerange(lwd=2) + theme_bw()+theme(legend.position = "none")  + labs(title='Night game', x='', y=' ', size=5) + scale_colour_brewer(palette="Set2")
, vp = viewport(layout.pos.row = 3, layout.pos.col = 1))
dev.off()
tsells
head(tsells)
min_from_game
for (min_from_game in -60:220) {
id = substr(as.character((min_from_game + 60 + 0.1)/1000),3,5)
png(paste("/Users/pbiecek/camtasia/Dropbox/Mr.October/movie_typesOfGame/plot",id,".png",sep=""),1800,1500)
grid.newpage()
pushViewport(viewport(layout = grid.layout(2, 2, heights = unit(c(2, 2), "null"))))
#Beer
selected <- tmpres1$min_from_game_start > min_from_game & tmpres1$min_from_game_start > min_from_game -20
aggreg <- tapply(tmpres1$sum[selected], tmpres1$sector[selected], sum, na.rm=T)[-1]
aggr_per_sector <- merge(data.frame(aggreg, sector = names(aggreg)), unique(posit[,c("sector","relx","rely")]))
aggr_per_sector2 <- na.omit(aggr_per_sector)
aggr_per_sector2$kol = substr(aggr_per_sector2$sector,1,1)
aggr_per_sector2 <- rbind(aggr_per_sector2, data.frame(sector="000", aggreg=0, aggr_per_sector2[1,3:4], kol=paste(0:4)))
aggr_per_sector2$kol <- factor(aggr_per_sector2$kol, levels=4:0)
aggr_per_sector3 <- aggr_per_sector2[rep(1:nrow(aggr_per_sector2), ceiling(aggr_per_sector2$aggreg/1000)),]
aggr_per_sector3$relx <- aggr_per_sector3$relx #+ rnorm(length(aggr_per_sector3$relx))/10000
aggr_per_sector3$rely <- aggr_per_sector3$rely #+ rnorm(length(aggr_per_sector3$rely))/20000
print(
ggmap(portland,darken = c(0.8, "white")) +
geom_point(aes(y = rely, x = relx, size=aggreg, col=kol), data=aggr_per_sector2)+scale_area(range = c(1, 25))+
theme(legend.position = "none") + labs(title=paste("Day game, minute: ",min_from_game, sep=""), x='', y=' ', size=5)+opts(plot.title=theme_text(size=40)) + scale_colour_brewer(palette="Set2")
, vp = viewport(layout.pos.row = 2, layout.pos.col = 1))
# Food
selected <- tmpres2$min_from_game_start > min_from_game & tmpres2$min_from_game_start > min_from_game -20
aggreg <- tapply(tmpres2$sum[selected], tmpres2$sector[selected], sum, na.rm=T)[-1]
aggr_per_sector <- merge(data.frame(aggreg, sector = names(aggreg)), unique(posit[,c("sector","relx","rely")]))
aggr_per_sector2 <- na.omit(aggr_per_sector)
aggr_per_sector2$kol = substr(aggr_per_sector2$sector,1,1)
aggr_per_sector2 <- rbind(aggr_per_sector2, data.frame(sector="000", aggreg=0, aggr_per_sector2[1,3:4], kol=paste(0:4)))
aggr_per_sector2$kol <- factor(aggr_per_sector2$kol, levels=4:0)
aggr_per_sector3 <- aggr_per_sector2[rep(1:nrow(aggr_per_sector2), ceiling(aggr_per_sector2$aggreg/1000)),]
aggr_per_sector3$relx <- aggr_per_sector3$relx #+ rnorm(length(aggr_per_sector3$relx))/10000
aggr_per_sector3$rely <- aggr_per_sector3$rely #+ rnorm(length(aggr_per_sector3$rely))/20000
print(
ggmap(portland,darken = c(0.8, "white")) +
geom_point(aes(y = rely, x = relx, size=aggreg, col=kol), data=aggr_per_sector2)+scale_area(range = c(1, 25))+
theme(legend.position = "none") + labs(title=paste("Weekend game, minute: ",min_from_game, sep=""), x='', y=' ', size=5)+opts(plot.title=theme_text(size=40))  + scale_colour_brewer(palette="Set2")
, vp = viewport(layout.pos.row = 2, layout.pos.col = 2))
# Non beer
selected <- tmpres3$min_from_game_start > min_from_game & tmpres3$min_from_game_start > min_from_game -10
aggreg <- tapply(tmpres3$sum[selected], tmpres3$sector[selected], sum, na.rm=T)[-1]
aggr_per_sector <- merge(data.frame(aggreg, sector = names(aggreg)), unique(posit[,c("sector","relx","rely")]))
aggr_per_sector2 <- na.omit(aggr_per_sector)
aggr_per_sector2$kol = substr(aggr_per_sector2$sector,1,1)
aggr_per_sector2 <- rbind(aggr_per_sector2, data.frame(sector="000", aggreg=0, aggr_per_sector2[1,3:4], kol=paste(0:4)))
aggr_per_sector2$kol <- factor(aggr_per_sector2$kol, levels=4:0)
aggr_per_sector3 <- aggr_per_sector2[rep(1:nrow(aggr_per_sector2), ceiling(aggr_per_sector2$aggreg/1000)),]
aggr_per_sector3$relx <- aggr_per_sector3$relx #+ rnorm(length(aggr_per_sector3$relx))/10000
aggr_per_sector3$rely <- aggr_per_sector3$rely #+ rnorm(length(aggr_per_sector3$rely))/20000
print(
ggmap(portland,darken = c(0.8, "white")) +
geom_point(aes(y = rely, x = relx, size=aggreg, col=kol), data=aggr_per_sector2)+scale_area(range = c(1, 25))+
theme(legend.position = "none") + labs(title=paste("Night game, minute: ",min_from_game, sep=""), x='', y=' ', size=5)+opts(plot.title=theme_text(size=40))  + scale_colour_brewer(palette="Set2")
, vp = viewport(layout.pos.row = 1, layout.pos.col = 2))
tsells <- tapply(tmpres1$sum,  tmpres1$min_from_game_start, sum)
tsells <- data.frame(x = as.numeric(names(tsells)), y=tsells)
tsells$col = "black"
tsells[tsells$x > min_from_game & tsells$x < min_from_game +10, "col"] = "red"
tsells$y[tsells$y > 4000] = 4000
pushViewport(viewport(layout = grid.layout(7, 2, heights = unit(c(2, 2), "null"))))
print(
ggplot(tsells, aes(x=x, y=y,  ymin = 0, ymax=y, colour=col), size=I(3)) + geom_linerange(lwd=2) + theme_bw()+theme(legend.position = "none") + labs(title='Day game', x='', y=' ', size=5) + scale_colour_brewer(palette="Set2")
, vp = viewport(layout.pos.row = 1, layout.pos.col = 1))
tsells <- tapply(tmpres2$sum,
tmpres2$min_from_game_start, sum)
tsells <- data.frame(x = as.numeric(names(tsells)), y=tsells)
tsells$col = "black"
tsells[tsells$x > min_from_game & tsells$x < min_from_game +10, "col"] = "red"
tsells$y[tsells$y > 4000] = 4000
print(
ggplot(tsells, aes(x=x, y=y,  ymin = 0, ymax=y, colour=col), size=I(3)) + geom_linerange(lwd=2) + theme_bw()+theme(legend.position = "none")  + labs(title='Weekend game', x='', y=' ', size=5) + scale_colour_brewer(palette="Set2")
, vp = viewport(layout.pos.row = 2, layout.pos.col = 1))
tsells <- tapply(tmpres3$sum,
tmpres3$min_from_game_start,
sum)
tsells <- data.frame(x = as.numeric(names(tsells)), y=tsells)
tsells$col = "black"
tsells[tsells$x > min_from_game & tsells$x < min_from_game +10, "col"] = "red"
tsells$y[tsells$y > 4000] = 4000
print(
ggplot(tsells, aes(x=x, y=y,  ymin = 0, ymax=y, colour=col), size=I(3), xlab="minute", ylab="") + geom_linerange(lwd=2) + theme_bw()+theme(legend.position = "none")  + labs(title='Night game', x='', y=' ', size=5) + scale_colour_brewer(palette="Set2")
, vp = viewport(layout.pos.row = 3, layout.pos.col = 1))
dev.off()
}
min_from_game
install.packages("twitteR")
library("twitteR")
sea <- searchTwitter("yankees", n=1500)
sea[1:5]
cred <- OAuthFactory$new(consumerKey='khq1vpM4A8zimStSALXMEQ',
consumerSecret='3Z4wcj7b33gneu1ZOOEq6b6y9rgHnGDXEgLZOGyI',
requestURL='https://api.twitter.com/1/',
accessURL=': http://api.twitter.com/oauth/438491318-nxqkSnwXFHux1FVF9FqsgeDZzdhoZcGc9yCYcDic',
authURL='http://api.twitter.com/ oauth/ authorize')
install.packages("ROAuth")
libraryu("ROAuth")
library("ROAuth")
cred <- OAuthFactory$new(consumerKey='khq1vpM4A8zimStSALXMEQ',
consumerSecret='3Z4wcj7b33gneu1ZOOEq6b6y9rgHnGDXEgLZOGyI',
requestURL='https://api.twitter.com/1/',
accessURL=': http://api.twitter.com/oauth/438491318-nxqkSnwXFHux1FVF9FqsgeDZzdhoZcGc9yCYcDic',
authURL='http://api.twitter.com/ oauth/ authorize')
sea <- searchTwitter("yankees", n=1500)
registerTwitterOAuth(cred)
cred$handshake()
cred <- OAuthFactory$new(consumerKey='khq1vpM4A8zimStSALXMEQ',
consumerSecret='3Z4wcj7b33gneu1ZOOEq6b6y9rgHnGDXEgLZOGyI',
requestURL='https://api.twitter.com/1/',
accessURL=': http://api.twitter.com/oauth/438491318-nxqkSnwXFHux1FVF9FqsgeDZzdhoZcGc9yCYcDic',
authURL='http://api.twitter.com/ oauth/ authorize')
cred$handshake()
cred <- OAuthFactory$new(consumerKey='khq1vpM4A8zimStSALXMEQ',
consumerSecret='3Z4wcj7b33gneu1ZOOEq6b6y9rgHnGDXEgLZOGyI',
requestURL='https://api.twitter.com/1/',
accessURL='http://api.twitter.com/oauth/438491318-nxqkSnwXFHux1FVF9FqsgeDZzdhoZcGc9yCYcDic',
authURL='http://api.twitter.com/oauth/authorize')
cred$handshake()
cred <- OAuthFactory$new(consumerKey='lo3DCTVzId30ZPiADzQHQ',
consumerSecret='D9dufRy0Qaz9X2X6CbN7Bi3xe53SKgg2lBliGOtBNus',
requestURL='https://api.twitter.com/oauth/request_token',
accessURL='https://api.twitter.com/oauth/access_token',
authURL='http://api.twitter.com/oauth/authorize')
cred$handshake()
require(tm)
head(stripWhitespace)
which(dat$ww2 %in% c("the","i", "not", "in", "rt", "as", "are"))
library(ggmap)
library(mapproj)
library(reshape2)
library(animation)
library(gridBase)
library(RPostgreSQL)
#
# setup the connection
drv <- dbDriver("PostgreSQL")
con <- dbConnect(drv, host="taac1.crrfz7zi7izw.us-east-1.redshift.amazonaws.com",
port=5439,dbname="yankees",
user="team2", password="Loft\"Om4")
dbGetQuery(con, "SET search_path TO import")
head(
dbGetQuery(con, "select game_id, inningnum, min(start_dttm_zulu) as inningstart
from mlb_atbat group by 1, 2 order by 1, 2;")
)
summary(
dbGetQuery(con, "select game_id, inningnum, min(start_dttm_zulu) as inningstart
from mlb_atbat group by 1, 2 order by 1, 2;")
)
dbGetQuery(con, "select
game.game_dttm_local,
game.stadium_name,
away.abbrev as team_away,
home.abbrev as team_home,
atbat.inningnum,
DATEADD(hour, -4, atbat.inningstart) as inningstart
from
mlb_game game,
mlb_team away,
mlb_team home,
(
select game_id, inningnum,
min(start_dttm_zulu) as inningstart
from mlb_atbat a, mlb_game g
where a.game_id = g.id group by 1, 2
) atbat
where game.id = atbat.game_id
and away.id = game.team_away_id
and home.id = game.team_home_id
and inningstart is not null
and stadium_id=3313
order by 1, 6
limit 18;")
library(devtools)
install_github('PISA2003lite', 'pbiecek')
library(PISA2003lite)
data(package=PISA2003lite)
data(package="PISA2003lite")
head(cognitive2003[,1:6])
head(school2003[,1:6])
head(schools2003[,1:6])
head(school2003dict$SC0101F)
head(scoredItem2003[,1:6])
head(scoredItem2003[,1:16])
head(cognitive2003[,1:16])
head(students2003[,1:16])
setwd("/Users/pbiecek/camtasia/GitHub/PISA2003lite/data/")
list.files()
sum*colnames(scoredItem2003) == "NA"()
sum(colnames(scoredItem2003) == "NA")
sum(colnames(scoredItem2003) == "NA", na,rm=T)
sum(colnames(scoredItem2003) == "NA", na.rm=T)
sum(is.na(colnames(scoredItem2003)), na.rm=T)
which(!is.na(colnames(scoredItem2003)))
which(is.na(colnames(scoredItem2003)))
scoredItem2003 <- scoredItem2003[,-6]
head(scoredItem2003[,1:20])
save(scoredItem2003, file="scoredItem2003.rda")
which(is.na(colnames(school2003)))
school2003 <- school2003[,-c(5,191)]
save(school2003, file="school2003.rda")
